// This file was generated by Beaver v0.9.6.1

1:	CLASS: SHIFT; goto 4
	classdecl: SHIFT; goto 182
	program: SHIFT; goto 2
	$goal: ACCEPT
2:	EOF: REDUCE $goal = program
	CLASS: SHIFT; goto 4
	classdecl: SHIFT; goto 3
3:	EOF: REDUCE program = program.p classdecl.c
	CLASS: REDUCE program = program.p classdecl.c
4:	TYPE: SHIFT; goto 5
5:	LPAREN: SHIFT; goto 169
	varformals: SHIFT; goto 6
6:	LBRACE: REDUCE empty = 
	EXTENDS: SHIFT; goto 163
	empty: SHIFT; goto 168
	classdeclopts: SHIFT; goto 7
7:	LBRACE: SHIFT; goto 9
	classbody: SHIFT; goto 8
8:	EOF: REDUCE classdecl = CLASS TYPE.t varformals.vf classdeclopts.ext classbody.b
	CLASS: REDUCE classdecl = CLASS TYPE.t varformals.vf classdeclopts.ext classbody.b
9:	RBRACE: SHIFT; goto 161
	LBRACE: SHIFT; goto 155
	VAR: SHIFT; goto 145
	DEF: REDUCE empty = 
	OVERRIDE: SHIFT; goto 159
	empty: SHIFT; goto 160
	optoverride: SHIFT; goto 13
	feature: SHIFT; goto 162
	featuredecl: SHIFT; goto 10
10:	RBRACE: SHIFT; goto 11
	LBRACE: SHIFT; goto 155
	VAR: SHIFT; goto 145
	DEF: REDUCE empty = 
	OVERRIDE: SHIFT; goto 159
	empty: SHIFT; goto 160
	optoverride: SHIFT; goto 13
	feature: SHIFT; goto 12
11:	EOF: REDUCE classbody = LBRACE featuredecl.b RBRACE
	CLASS: REDUCE classbody = LBRACE featuredecl.b RBRACE
12:	RBRACE: REDUCE featuredecl = featuredecl.b feature.f
	LBRACE: REDUCE featuredecl = featuredecl.b feature.f
	VAR: REDUCE featuredecl = featuredecl.b feature.f
	DEF: REDUCE featuredecl = featuredecl.b feature.f
	OVERRIDE: REDUCE featuredecl = featuredecl.b feature.f
13:	DEF: SHIFT; goto 14
14:	ID: SHIFT; goto 15
15:	LPAREN: SHIFT; goto 134
	formals: SHIFT; goto 16
16:	COLON: SHIFT; goto 17
17:	TYPE: SHIFT; goto 18
18:	ASSIGN: SHIFT; goto 19
19:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	NATIVE: SHIFT; goto 23
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 22
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
	exprornative: SHIFT; goto 20
20:	SEMI: SHIFT; goto 21
21:	RBRACE: REDUCE feature = optoverride.o DEF ID.i formals.fo COLON TYPE.t ASSIGN exprornative.e SEMI
	LBRACE: REDUCE feature = optoverride.o DEF ID.i formals.fo COLON TYPE.t ASSIGN exprornative.e SEMI
	VAR: REDUCE feature = optoverride.o DEF ID.i formals.fo COLON TYPE.t ASSIGN exprornative.e SEMI
	DEF: REDUCE feature = optoverride.o DEF ID.i formals.fo COLON TYPE.t ASSIGN exprornative.e SEMI
	OVERRIDE: REDUCE feature = optoverride.o DEF ID.i formals.fo COLON TYPE.t ASSIGN exprornative.e SEMI
22:	SEMI: REDUCE exprornative = expr.e
23:	SEMI: REDUCE exprornative = NATIVE
24:	MINUS: REDUCE primary = ID.id
	RBRACE: REDUCE primary = ID.id
	RPAREN: REDUCE primary = ID.id
	SEMI: REDUCE primary = ID.id
	COMMA: REDUCE primary = ID.id
	CASE: REDUCE primary = ID.id
	LPAREN: SHIFT; goto 80
	ELSE: REDUCE primary = ID.id
	MATCH: REDUCE primary = ID.id
	LE: REDUCE primary = ID.id
	LT: REDUCE primary = ID.id
	EQUALS: REDUCE primary = ID.id
	PLUS: REDUCE primary = ID.id
	TIMES: REDUCE primary = ID.id
	DIV: REDUCE primary = ID.id
	DOT: REDUCE primary = ID.id
	ASSIGN: SHIFT; goto 25
	actuals: SHIFT; goto 97
25:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 26
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
26:	RBRACE: REDUCE expr = ID.id ASSIGN expr.e
	RPAREN: REDUCE expr = ID.id ASSIGN expr.e
	SEMI: REDUCE expr = ID.id ASSIGN expr.e
	COMMA: REDUCE expr = ID.id ASSIGN expr.e
	CASE: REDUCE expr = ID.id ASSIGN expr.e
	ELSE: REDUCE expr = ID.id ASSIGN expr.e
27:	RBRACE: REDUCE expr = ifwhile
	RPAREN: REDUCE expr = ifwhile
	SEMI: REDUCE expr = ifwhile
	COMMA: REDUCE expr = ifwhile
	CASE: REDUCE expr = ifwhile
	ELSE: REDUCE expr = ifwhile
28:	LPAREN: SHIFT; goto 29
29:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 30
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
30:	RPAREN: SHIFT; goto 31
31:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 32
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
32:	ELSE: SHIFT; goto 33
33:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 34
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
34:	RBRACE: REDUCE ifwhile = IF LPAREN expr.e1 RPAREN expr.e2 ELSE expr.e3
	RPAREN: REDUCE ifwhile = IF LPAREN expr.e1 RPAREN expr.e2 ELSE expr.e3
	SEMI: REDUCE ifwhile = IF LPAREN expr.e1 RPAREN expr.e2 ELSE expr.e3
	COMMA: REDUCE ifwhile = IF LPAREN expr.e1 RPAREN expr.e2 ELSE expr.e3
	CASE: REDUCE ifwhile = IF LPAREN expr.e1 RPAREN expr.e2 ELSE expr.e3
	ELSE: REDUCE ifwhile = IF LPAREN expr.e1 RPAREN expr.e2 ELSE expr.e3
35:	LPAREN: SHIFT; goto 36
36:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 37
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
37:	RPAREN: SHIFT; goto 38
38:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 39
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
39:	RBRACE: REDUCE ifwhile = WHILE LPAREN expr.e4 RPAREN expr.e5
	RPAREN: REDUCE ifwhile = WHILE LPAREN expr.e4 RPAREN expr.e5
	SEMI: REDUCE ifwhile = WHILE LPAREN expr.e4 RPAREN expr.e5
	COMMA: REDUCE ifwhile = WHILE LPAREN expr.e4 RPAREN expr.e5
	CASE: REDUCE ifwhile = WHILE LPAREN expr.e4 RPAREN expr.e5
	ELSE: REDUCE ifwhile = WHILE LPAREN expr.e4 RPAREN expr.e5
40:	RBRACE: REDUCE ifwhile = match
	RPAREN: REDUCE ifwhile = match
	SEMI: REDUCE ifwhile = match
	COMMA: REDUCE ifwhile = match
	CASE: REDUCE ifwhile = match
	ELSE: REDUCE ifwhile = match
	MATCH: SHIFT; goto 41
41:	LBRACE: SHIFT; goto 43
	cases: SHIFT; goto 42
42:	RBRACE: REDUCE match = match.m MATCH cases.c
	RPAREN: REDUCE match = match.m MATCH cases.c
	SEMI: REDUCE match = match.m MATCH cases.c
	COMMA: REDUCE match = match.m MATCH cases.c
	CASE: REDUCE match = match.m MATCH cases.c
	ELSE: REDUCE match = match.m MATCH cases.c
	MATCH: REDUCE match = match.m MATCH cases.c
43:	CASE: SHIFT; goto 130
	casesdecl: SHIFT; goto 44
44:	RBRACE: SHIFT; goto 45
	CASE: SHIFT; goto 46
45:	RBRACE: REDUCE cases = LBRACE casesdecl.cd RBRACE
	RPAREN: REDUCE cases = LBRACE casesdecl.cd RBRACE
	SEMI: REDUCE cases = LBRACE casesdecl.cd RBRACE
	COMMA: REDUCE cases = LBRACE casesdecl.cd RBRACE
	CASE: REDUCE cases = LBRACE casesdecl.cd RBRACE
	ELSE: REDUCE cases = LBRACE casesdecl.cd RBRACE
	MATCH: REDUCE cases = LBRACE casesdecl.cd RBRACE
46:	ID: SHIFT; goto 126
	NULL: SHIFT; goto 129
	idornull: SHIFT; goto 47
47:	ARROW: SHIFT; goto 48
48:	MINUS: SHIFT; goto 74
	RBRACE: REDUCE empty = 
	LBRACE: SHIFT; goto 101
	CASE: REDUCE empty = 
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	VAR: SHIFT; goto 104
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 51
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
	empty: SHIFT; goto 50
	block: SHIFT; goto 49
	blockdecl: SHIFT; goto 53
49:	RBRACE: REDUCE casesdecl = casesdecl.cd CASE idornull.ion ARROW block.bl
	CASE: REDUCE casesdecl = casesdecl.cd CASE idornull.ion ARROW block.bl
50:	RBRACE: REDUCE block = empty
	CASE: REDUCE block = empty
51:	RBRACE: REDUCE block = expr.e
	SEMI: SHIFT; goto 52
	CASE: REDUCE block = expr.e
52:	MINUS: REDUCE blockdecl = expr.e SEMI
	LBRACE: REDUCE blockdecl = expr.e SEMI
	ID: REDUCE blockdecl = expr.e SEMI
	LPAREN: REDUCE blockdecl = expr.e SEMI
	NULL: REDUCE blockdecl = expr.e SEMI
	SUPER: REDUCE blockdecl = expr.e SEMI
	NEW: REDUCE blockdecl = expr.e SEMI
	NOT: REDUCE blockdecl = expr.e SEMI
	INTEGER: REDUCE blockdecl = expr.e SEMI
	STRING: REDUCE blockdecl = expr.e SEMI
	BOOLEAN: REDUCE blockdecl = expr.e SEMI
	THIS: REDUCE blockdecl = expr.e SEMI
	IF: REDUCE blockdecl = expr.e SEMI
	WHILE: REDUCE blockdecl = expr.e SEMI
	VAR: REDUCE blockdecl = expr.e SEMI
53:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	VAR: SHIFT; goto 56
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 54
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
54:	RBRACE: REDUCE block = blockdecl.bd expr.e
	SEMI: SHIFT; goto 55
	CASE: REDUCE block = blockdecl.bd expr.e
55:	MINUS: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	LBRACE: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	ID: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	LPAREN: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	NULL: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	SUPER: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	NEW: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	NOT: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	INTEGER: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	STRING: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	BOOLEAN: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	THIS: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	IF: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	WHILE: REDUCE blockdecl = blockdecl.bd expr.e SEMI
	VAR: REDUCE blockdecl = blockdecl.bd expr.e SEMI
56:	ID: SHIFT; goto 57
57:	COLON: SHIFT; goto 58
58:	TYPE: SHIFT; goto 59
59:	ASSIGN: SHIFT; goto 60
60:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 61
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
61:	SEMI: SHIFT; goto 62
62:	MINUS: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	LBRACE: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	ID: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	LPAREN: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	NULL: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	SUPER: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	NEW: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	NOT: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	INTEGER: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	STRING: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	BOOLEAN: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	THIS: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	IF: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	WHILE: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	VAR: REDUCE blockdecl = blockdecl.bd VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
63:	RBRACE: REDUCE match = comparison
	RPAREN: REDUCE match = comparison
	SEMI: REDUCE match = comparison
	COMMA: REDUCE match = comparison
	CASE: REDUCE match = comparison
	ELSE: REDUCE match = comparison
	MATCH: REDUCE match = comparison
	LE: SHIFT; goto 64
	LT: SHIFT; goto 124
64:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 96
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 65
65:	RBRACE: REDUCE comparison = comparison.c1 LE equals.e1
	RPAREN: REDUCE comparison = comparison.c1 LE equals.e1
	SEMI: REDUCE comparison = comparison.c1 LE equals.e1
	COMMA: REDUCE comparison = comparison.c1 LE equals.e1
	CASE: REDUCE comparison = comparison.c1 LE equals.e1
	ELSE: REDUCE comparison = comparison.c1 LE equals.e1
	MATCH: REDUCE comparison = comparison.c1 LE equals.e1
	LE: REDUCE comparison = comparison.c1 LE equals.e1
	LT: REDUCE comparison = comparison.c1 LE equals.e1
	EQUALS: SHIFT; goto 66
66:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 96
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 67
67:	MINUS: SHIFT; goto 87
	RBRACE: REDUCE equals = equals.e EQUALS plusminus.p
	RPAREN: REDUCE equals = equals.e EQUALS plusminus.p
	SEMI: REDUCE equals = equals.e EQUALS plusminus.p
	COMMA: REDUCE equals = equals.e EQUALS plusminus.p
	CASE: REDUCE equals = equals.e EQUALS plusminus.p
	ELSE: REDUCE equals = equals.e EQUALS plusminus.p
	MATCH: REDUCE equals = equals.e EQUALS plusminus.p
	LE: REDUCE equals = equals.e EQUALS plusminus.p
	LT: REDUCE equals = equals.e EQUALS plusminus.p
	EQUALS: REDUCE equals = equals.e EQUALS plusminus.p
	PLUS: SHIFT; goto 68
68:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 96
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 69
69:	MINUS: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	RBRACE: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	RPAREN: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	SEMI: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	COMMA: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	CASE: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	ELSE: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	MATCH: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	LE: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	LT: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	EQUALS: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	PLUS: REDUCE plusminus = plusminus.p1 PLUS timesdiv.t1
	TIMES: SHIFT; goto 70
	DIV: SHIFT; goto 89
70:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 96
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	notneg: SHIFT; goto 71
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
71:	MINUS: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	RBRACE: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	RPAREN: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	SEMI: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	COMMA: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	CASE: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	ELSE: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	MATCH: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	LE: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	LT: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	EQUALS: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	PLUS: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	TIMES: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
	DIV: REDUCE timesdiv = timesdiv.t1 TIMES notneg.n1
72:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 96
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	notneg: SHIFT; goto 73
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
73:	MINUS: REDUCE notneg = NOT notneg.n1
	RBRACE: REDUCE notneg = NOT notneg.n1
	RPAREN: REDUCE notneg = NOT notneg.n1
	SEMI: REDUCE notneg = NOT notneg.n1
	COMMA: REDUCE notneg = NOT notneg.n1
	CASE: REDUCE notneg = NOT notneg.n1
	ELSE: REDUCE notneg = NOT notneg.n1
	MATCH: REDUCE notneg = NOT notneg.n1
	LE: REDUCE notneg = NOT notneg.n1
	LT: REDUCE notneg = NOT notneg.n1
	EQUALS: REDUCE notneg = NOT notneg.n1
	PLUS: REDUCE notneg = NOT notneg.n1
	TIMES: REDUCE notneg = NOT notneg.n1
	DIV: REDUCE notneg = NOT notneg.n1
74:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 96
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	notneg: SHIFT; goto 75
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
75:	MINUS: REDUCE notneg = MINUS notneg.n2
	RBRACE: REDUCE notneg = MINUS notneg.n2
	RPAREN: REDUCE notneg = MINUS notneg.n2
	SEMI: REDUCE notneg = MINUS notneg.n2
	COMMA: REDUCE notneg = MINUS notneg.n2
	CASE: REDUCE notneg = MINUS notneg.n2
	ELSE: REDUCE notneg = MINUS notneg.n2
	MATCH: REDUCE notneg = MINUS notneg.n2
	LE: REDUCE notneg = MINUS notneg.n2
	LT: REDUCE notneg = MINUS notneg.n2
	EQUALS: REDUCE notneg = MINUS notneg.n2
	PLUS: REDUCE notneg = MINUS notneg.n2
	TIMES: REDUCE notneg = MINUS notneg.n2
	DIV: REDUCE notneg = MINUS notneg.n2
76:	MINUS: REDUCE notneg = dotcall
	RBRACE: REDUCE notneg = dotcall
	RPAREN: REDUCE notneg = dotcall
	SEMI: REDUCE notneg = dotcall
	COMMA: REDUCE notneg = dotcall
	CASE: REDUCE notneg = dotcall
	ELSE: REDUCE notneg = dotcall
	MATCH: REDUCE notneg = dotcall
	LE: REDUCE notneg = dotcall
	LT: REDUCE notneg = dotcall
	EQUALS: REDUCE notneg = dotcall
	PLUS: REDUCE notneg = dotcall
	TIMES: REDUCE notneg = dotcall
	DIV: REDUCE notneg = dotcall
	DOT: SHIFT; goto 77
77:	ID: SHIFT; goto 78
78:	LPAREN: SHIFT; goto 80
	actuals: SHIFT; goto 79
79:	MINUS: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	RBRACE: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	RPAREN: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	SEMI: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	COMMA: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	CASE: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	ELSE: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	MATCH: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	LE: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	LT: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	EQUALS: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	PLUS: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	TIMES: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	DIV: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
	DOT: REDUCE dotcall = dotcall.d DOT ID.id actuals.a
80:	MINUS: SHIFT; goto 74
	RPAREN: SHIFT; goto 122
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 123
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
	actualsdecl: SHIFT; goto 81
81:	RPAREN: SHIFT; goto 82
	COMMA: SHIFT; goto 83
82:	MINUS: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	RBRACE: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	RPAREN: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	SEMI: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	LBRACE: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	COMMA: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	CASE: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	ELSE: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	MATCH: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	LE: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	LT: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	EQUALS: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	PLUS: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	TIMES: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	DIV: REDUCE actuals = LPAREN actualsdecl.a RPAREN
	DOT: REDUCE actuals = LPAREN actualsdecl.a RPAREN
83:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 84
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
84:	RPAREN: REDUCE actualsdecl = actualsdecl.a COMMA expr.e
	COMMA: REDUCE actualsdecl = actualsdecl.a COMMA expr.e
85:	RBRACE: REDUCE comparison = equals
	RPAREN: REDUCE comparison = equals
	SEMI: REDUCE comparison = equals
	COMMA: REDUCE comparison = equals
	CASE: REDUCE comparison = equals
	ELSE: REDUCE comparison = equals
	MATCH: REDUCE comparison = equals
	LE: REDUCE comparison = equals
	LT: REDUCE comparison = equals
	EQUALS: SHIFT; goto 66
86:	MINUS: SHIFT; goto 87
	RBRACE: REDUCE equals = plusminus
	RPAREN: REDUCE equals = plusminus
	SEMI: REDUCE equals = plusminus
	COMMA: REDUCE equals = plusminus
	CASE: REDUCE equals = plusminus
	ELSE: REDUCE equals = plusminus
	MATCH: REDUCE equals = plusminus
	LE: REDUCE equals = plusminus
	LT: REDUCE equals = plusminus
	EQUALS: REDUCE equals = plusminus
	PLUS: SHIFT; goto 68
87:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 96
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 88
88:	MINUS: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	RBRACE: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	RPAREN: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	SEMI: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	COMMA: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	CASE: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	ELSE: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	MATCH: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	LE: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	LT: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	EQUALS: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	PLUS: REDUCE plusminus = plusminus.p2 MINUS timesdiv.t2
	TIMES: SHIFT; goto 70
	DIV: SHIFT; goto 89
89:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 96
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	notneg: SHIFT; goto 90
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
90:	MINUS: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	RBRACE: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	RPAREN: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	SEMI: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	COMMA: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	CASE: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	ELSE: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	MATCH: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	LE: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	LT: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	EQUALS: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	PLUS: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	TIMES: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
	DIV: REDUCE timesdiv = timesdiv.t2 DIV notneg.n2
91:	MINUS: REDUCE dotcall = primary
	RBRACE: REDUCE dotcall = primary
	RPAREN: REDUCE dotcall = primary
	SEMI: REDUCE dotcall = primary
	COMMA: REDUCE dotcall = primary
	CASE: REDUCE dotcall = primary
	ELSE: REDUCE dotcall = primary
	MATCH: REDUCE dotcall = primary
	LE: REDUCE dotcall = primary
	LT: REDUCE dotcall = primary
	EQUALS: REDUCE dotcall = primary
	PLUS: REDUCE dotcall = primary
	TIMES: REDUCE dotcall = primary
	DIV: REDUCE dotcall = primary
	DOT: REDUCE dotcall = primary
92:	DOT: SHIFT; goto 93
93:	ID: SHIFT; goto 94
94:	LPAREN: SHIFT; goto 80
	actuals: SHIFT; goto 95
95:	MINUS: REDUCE primary = SUPER DOT ID.id actuals.a
	RBRACE: REDUCE primary = SUPER DOT ID.id actuals.a
	RPAREN: REDUCE primary = SUPER DOT ID.id actuals.a
	SEMI: REDUCE primary = SUPER DOT ID.id actuals.a
	COMMA: REDUCE primary = SUPER DOT ID.id actuals.a
	CASE: REDUCE primary = SUPER DOT ID.id actuals.a
	ELSE: REDUCE primary = SUPER DOT ID.id actuals.a
	MATCH: REDUCE primary = SUPER DOT ID.id actuals.a
	LE: REDUCE primary = SUPER DOT ID.id actuals.a
	LT: REDUCE primary = SUPER DOT ID.id actuals.a
	EQUALS: REDUCE primary = SUPER DOT ID.id actuals.a
	PLUS: REDUCE primary = SUPER DOT ID.id actuals.a
	TIMES: REDUCE primary = SUPER DOT ID.id actuals.a
	DIV: REDUCE primary = SUPER DOT ID.id actuals.a
	DOT: REDUCE primary = SUPER DOT ID.id actuals.a
96:	MINUS: REDUCE primary = ID.id
	RBRACE: REDUCE primary = ID.id
	RPAREN: REDUCE primary = ID.id
	SEMI: REDUCE primary = ID.id
	COMMA: REDUCE primary = ID.id
	CASE: REDUCE primary = ID.id
	LPAREN: SHIFT; goto 80
	ELSE: REDUCE primary = ID.id
	MATCH: REDUCE primary = ID.id
	LE: REDUCE primary = ID.id
	LT: REDUCE primary = ID.id
	EQUALS: REDUCE primary = ID.id
	PLUS: REDUCE primary = ID.id
	TIMES: REDUCE primary = ID.id
	DIV: REDUCE primary = ID.id
	DOT: REDUCE primary = ID.id
	actuals: SHIFT; goto 97
97:	MINUS: REDUCE primary = ID.id actuals.a
	RBRACE: REDUCE primary = ID.id actuals.a
	RPAREN: REDUCE primary = ID.id actuals.a
	SEMI: REDUCE primary = ID.id actuals.a
	COMMA: REDUCE primary = ID.id actuals.a
	CASE: REDUCE primary = ID.id actuals.a
	ELSE: REDUCE primary = ID.id actuals.a
	MATCH: REDUCE primary = ID.id actuals.a
	LE: REDUCE primary = ID.id actuals.a
	LT: REDUCE primary = ID.id actuals.a
	EQUALS: REDUCE primary = ID.id actuals.a
	PLUS: REDUCE primary = ID.id actuals.a
	TIMES: REDUCE primary = ID.id actuals.a
	DIV: REDUCE primary = ID.id actuals.a
	DOT: REDUCE primary = ID.id actuals.a
98:	TYPE: SHIFT; goto 99
99:	LPAREN: SHIFT; goto 80
	actuals: SHIFT; goto 100
100:	MINUS: REDUCE primary = NEW TYPE.t actuals.a
	RBRACE: REDUCE primary = NEW TYPE.t actuals.a
	RPAREN: REDUCE primary = NEW TYPE.t actuals.a
	SEMI: REDUCE primary = NEW TYPE.t actuals.a
	COMMA: REDUCE primary = NEW TYPE.t actuals.a
	CASE: REDUCE primary = NEW TYPE.t actuals.a
	ELSE: REDUCE primary = NEW TYPE.t actuals.a
	MATCH: REDUCE primary = NEW TYPE.t actuals.a
	LE: REDUCE primary = NEW TYPE.t actuals.a
	LT: REDUCE primary = NEW TYPE.t actuals.a
	EQUALS: REDUCE primary = NEW TYPE.t actuals.a
	PLUS: REDUCE primary = NEW TYPE.t actuals.a
	TIMES: REDUCE primary = NEW TYPE.t actuals.a
	DIV: REDUCE primary = NEW TYPE.t actuals.a
	DOT: REDUCE primary = NEW TYPE.t actuals.a
101:	MINUS: SHIFT; goto 74
	RBRACE: REDUCE empty = 
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	VAR: SHIFT; goto 104
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 51
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
	empty: SHIFT; goto 50
	block: SHIFT; goto 102
	blockdecl: SHIFT; goto 53
102:	RBRACE: SHIFT; goto 103
103:	MINUS: REDUCE primary = LBRACE block.bl RBRACE
	RBRACE: REDUCE primary = LBRACE block.bl RBRACE
	RPAREN: REDUCE primary = LBRACE block.bl RBRACE
	SEMI: REDUCE primary = LBRACE block.bl RBRACE
	COMMA: REDUCE primary = LBRACE block.bl RBRACE
	CASE: REDUCE primary = LBRACE block.bl RBRACE
	ELSE: REDUCE primary = LBRACE block.bl RBRACE
	MATCH: REDUCE primary = LBRACE block.bl RBRACE
	LE: REDUCE primary = LBRACE block.bl RBRACE
	LT: REDUCE primary = LBRACE block.bl RBRACE
	EQUALS: REDUCE primary = LBRACE block.bl RBRACE
	PLUS: REDUCE primary = LBRACE block.bl RBRACE
	TIMES: REDUCE primary = LBRACE block.bl RBRACE
	DIV: REDUCE primary = LBRACE block.bl RBRACE
	DOT: REDUCE primary = LBRACE block.bl RBRACE
104:	ID: SHIFT; goto 105
105:	COLON: SHIFT; goto 106
106:	TYPE: SHIFT; goto 107
107:	ASSIGN: SHIFT; goto 108
108:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 109
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
109:	SEMI: SHIFT; goto 110
110:	MINUS: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	LBRACE: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	ID: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	LPAREN: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	NULL: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	SUPER: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	NEW: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	NOT: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	INTEGER: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	STRING: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	BOOLEAN: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	THIS: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	IF: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	WHILE: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
	VAR: REDUCE blockdecl = VAR ID.i COLON TYPE.t ASSIGN expr.e SEMI
111:	MINUS: REDUCE plusminus = timesdiv
	RBRACE: REDUCE plusminus = timesdiv
	RPAREN: REDUCE plusminus = timesdiv
	SEMI: REDUCE plusminus = timesdiv
	COMMA: REDUCE plusminus = timesdiv
	CASE: REDUCE plusminus = timesdiv
	ELSE: REDUCE plusminus = timesdiv
	MATCH: REDUCE plusminus = timesdiv
	LE: REDUCE plusminus = timesdiv
	LT: REDUCE plusminus = timesdiv
	EQUALS: REDUCE plusminus = timesdiv
	PLUS: REDUCE plusminus = timesdiv
	TIMES: SHIFT; goto 70
	DIV: SHIFT; goto 89
112:	MINUS: REDUCE timesdiv = notneg
	RBRACE: REDUCE timesdiv = notneg
	RPAREN: REDUCE timesdiv = notneg
	SEMI: REDUCE timesdiv = notneg
	COMMA: REDUCE timesdiv = notneg
	CASE: REDUCE timesdiv = notneg
	ELSE: REDUCE timesdiv = notneg
	MATCH: REDUCE timesdiv = notneg
	LE: REDUCE timesdiv = notneg
	LT: REDUCE timesdiv = notneg
	EQUALS: REDUCE timesdiv = notneg
	PLUS: REDUCE timesdiv = notneg
	TIMES: REDUCE timesdiv = notneg
	DIV: REDUCE timesdiv = notneg
113:	MINUS: SHIFT; goto 74
	RPAREN: SHIFT; goto 116
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 114
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
114:	RPAREN: SHIFT; goto 115
115:	MINUS: REDUCE primary = LPAREN expr.e RPAREN
	RBRACE: REDUCE primary = LPAREN expr.e RPAREN
	RPAREN: REDUCE primary = LPAREN expr.e RPAREN
	SEMI: REDUCE primary = LPAREN expr.e RPAREN
	COMMA: REDUCE primary = LPAREN expr.e RPAREN
	CASE: REDUCE primary = LPAREN expr.e RPAREN
	ELSE: REDUCE primary = LPAREN expr.e RPAREN
	MATCH: REDUCE primary = LPAREN expr.e RPAREN
	LE: REDUCE primary = LPAREN expr.e RPAREN
	LT: REDUCE primary = LPAREN expr.e RPAREN
	EQUALS: REDUCE primary = LPAREN expr.e RPAREN
	PLUS: REDUCE primary = LPAREN expr.e RPAREN
	TIMES: REDUCE primary = LPAREN expr.e RPAREN
	DIV: REDUCE primary = LPAREN expr.e RPAREN
	DOT: REDUCE primary = LPAREN expr.e RPAREN
116:	MINUS: REDUCE primary = LPAREN RPAREN
	RBRACE: REDUCE primary = LPAREN RPAREN
	RPAREN: REDUCE primary = LPAREN RPAREN
	SEMI: REDUCE primary = LPAREN RPAREN
	COMMA: REDUCE primary = LPAREN RPAREN
	CASE: REDUCE primary = LPAREN RPAREN
	ELSE: REDUCE primary = LPAREN RPAREN
	MATCH: REDUCE primary = LPAREN RPAREN
	LE: REDUCE primary = LPAREN RPAREN
	LT: REDUCE primary = LPAREN RPAREN
	EQUALS: REDUCE primary = LPAREN RPAREN
	PLUS: REDUCE primary = LPAREN RPAREN
	TIMES: REDUCE primary = LPAREN RPAREN
	DIV: REDUCE primary = LPAREN RPAREN
	DOT: REDUCE primary = LPAREN RPAREN
117:	MINUS: REDUCE primary = NULL
	RBRACE: REDUCE primary = NULL
	RPAREN: REDUCE primary = NULL
	SEMI: REDUCE primary = NULL
	COMMA: REDUCE primary = NULL
	CASE: REDUCE primary = NULL
	ELSE: REDUCE primary = NULL
	MATCH: REDUCE primary = NULL
	LE: REDUCE primary = NULL
	LT: REDUCE primary = NULL
	EQUALS: REDUCE primary = NULL
	PLUS: REDUCE primary = NULL
	TIMES: REDUCE primary = NULL
	DIV: REDUCE primary = NULL
	DOT: REDUCE primary = NULL
118:	MINUS: REDUCE primary = INTEGER.i
	RBRACE: REDUCE primary = INTEGER.i
	RPAREN: REDUCE primary = INTEGER.i
	SEMI: REDUCE primary = INTEGER.i
	COMMA: REDUCE primary = INTEGER.i
	CASE: REDUCE primary = INTEGER.i
	ELSE: REDUCE primary = INTEGER.i
	MATCH: REDUCE primary = INTEGER.i
	LE: REDUCE primary = INTEGER.i
	LT: REDUCE primary = INTEGER.i
	EQUALS: REDUCE primary = INTEGER.i
	PLUS: REDUCE primary = INTEGER.i
	TIMES: REDUCE primary = INTEGER.i
	DIV: REDUCE primary = INTEGER.i
	DOT: REDUCE primary = INTEGER.i
119:	MINUS: REDUCE primary = STRING.s
	RBRACE: REDUCE primary = STRING.s
	RPAREN: REDUCE primary = STRING.s
	SEMI: REDUCE primary = STRING.s
	COMMA: REDUCE primary = STRING.s
	CASE: REDUCE primary = STRING.s
	ELSE: REDUCE primary = STRING.s
	MATCH: REDUCE primary = STRING.s
	LE: REDUCE primary = STRING.s
	LT: REDUCE primary = STRING.s
	EQUALS: REDUCE primary = STRING.s
	PLUS: REDUCE primary = STRING.s
	TIMES: REDUCE primary = STRING.s
	DIV: REDUCE primary = STRING.s
	DOT: REDUCE primary = STRING.s
120:	MINUS: REDUCE primary = BOOLEAN.b
	RBRACE: REDUCE primary = BOOLEAN.b
	RPAREN: REDUCE primary = BOOLEAN.b
	SEMI: REDUCE primary = BOOLEAN.b
	COMMA: REDUCE primary = BOOLEAN.b
	CASE: REDUCE primary = BOOLEAN.b
	ELSE: REDUCE primary = BOOLEAN.b
	MATCH: REDUCE primary = BOOLEAN.b
	LE: REDUCE primary = BOOLEAN.b
	LT: REDUCE primary = BOOLEAN.b
	EQUALS: REDUCE primary = BOOLEAN.b
	PLUS: REDUCE primary = BOOLEAN.b
	TIMES: REDUCE primary = BOOLEAN.b
	DIV: REDUCE primary = BOOLEAN.b
	DOT: REDUCE primary = BOOLEAN.b
121:	MINUS: REDUCE primary = THIS
	RBRACE: REDUCE primary = THIS
	RPAREN: REDUCE primary = THIS
	SEMI: REDUCE primary = THIS
	COMMA: REDUCE primary = THIS
	CASE: REDUCE primary = THIS
	ELSE: REDUCE primary = THIS
	MATCH: REDUCE primary = THIS
	LE: REDUCE primary = THIS
	LT: REDUCE primary = THIS
	EQUALS: REDUCE primary = THIS
	PLUS: REDUCE primary = THIS
	TIMES: REDUCE primary = THIS
	DIV: REDUCE primary = THIS
	DOT: REDUCE primary = THIS
122:	MINUS: REDUCE actuals = LPAREN RPAREN
	RBRACE: REDUCE actuals = LPAREN RPAREN
	RPAREN: REDUCE actuals = LPAREN RPAREN
	SEMI: REDUCE actuals = LPAREN RPAREN
	LBRACE: REDUCE actuals = LPAREN RPAREN
	COMMA: REDUCE actuals = LPAREN RPAREN
	CASE: REDUCE actuals = LPAREN RPAREN
	ELSE: REDUCE actuals = LPAREN RPAREN
	MATCH: REDUCE actuals = LPAREN RPAREN
	LE: REDUCE actuals = LPAREN RPAREN
	LT: REDUCE actuals = LPAREN RPAREN
	EQUALS: REDUCE actuals = LPAREN RPAREN
	PLUS: REDUCE actuals = LPAREN RPAREN
	TIMES: REDUCE actuals = LPAREN RPAREN
	DIV: REDUCE actuals = LPAREN RPAREN
	DOT: REDUCE actuals = LPAREN RPAREN
123:	RPAREN: REDUCE actualsdecl = expr.e
	COMMA: REDUCE actualsdecl = expr.e
124:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 96
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 125
125:	RBRACE: REDUCE comparison = comparison.c2 LT equals.e2
	RPAREN: REDUCE comparison = comparison.c2 LT equals.e2
	SEMI: REDUCE comparison = comparison.c2 LT equals.e2
	COMMA: REDUCE comparison = comparison.c2 LT equals.e2
	CASE: REDUCE comparison = comparison.c2 LT equals.e2
	ELSE: REDUCE comparison = comparison.c2 LT equals.e2
	MATCH: REDUCE comparison = comparison.c2 LT equals.e2
	LE: REDUCE comparison = comparison.c2 LT equals.e2
	LT: REDUCE comparison = comparison.c2 LT equals.e2
	EQUALS: SHIFT; goto 66
126:	COLON: SHIFT; goto 127
127:	TYPE: SHIFT; goto 128
128:	ARROW: REDUCE idornull = ID.id COLON TYPE.t
129:	ARROW: REDUCE idornull = NULL
130:	ID: SHIFT; goto 126
	NULL: SHIFT; goto 129
	idornull: SHIFT; goto 131
131:	ARROW: SHIFT; goto 132
132:	MINUS: SHIFT; goto 74
	RBRACE: REDUCE empty = 
	LBRACE: SHIFT; goto 101
	CASE: REDUCE empty = 
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	VAR: SHIFT; goto 104
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 51
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
	empty: SHIFT; goto 50
	block: SHIFT; goto 133
	blockdecl: SHIFT; goto 53
133:	RBRACE: REDUCE casesdecl = CASE idornull.ion ARROW block.bl
	CASE: REDUCE casesdecl = CASE idornull.ion ARROW block.bl
134:	RPAREN: SHIFT; goto 141
	ID: SHIFT; goto 142
	formalsdecl: SHIFT; goto 135
135:	RPAREN: SHIFT; goto 136
	COMMA: SHIFT; goto 137
136:	COLON: REDUCE formals = LPAREN formalsdecl.fo RPAREN
137:	ID: SHIFT; goto 138
138:	COLON: SHIFT; goto 139
139:	TYPE: SHIFT; goto 140
140:	RPAREN: REDUCE formalsdecl = formalsdecl.fo COMMA ID.i COLON TYPE.t
	COMMA: REDUCE formalsdecl = formalsdecl.fo COMMA ID.i COLON TYPE.t
141:	COLON: REDUCE formals = LPAREN RPAREN
142:	COLON: SHIFT; goto 143
143:	TYPE: SHIFT; goto 144
144:	RPAREN: REDUCE formalsdecl = ID.i COLON TYPE.t
	COMMA: REDUCE formalsdecl = ID.i COLON TYPE.t
145:	ID: SHIFT; goto 146
146:	COLON: SHIFT; goto 151
	ASSIGN: SHIFT; goto 149
	nativeortype: SHIFT; goto 147
147:	SEMI: SHIFT; goto 148
148:	RBRACE: REDUCE feature = VAR ID.i nativeortype.nt SEMI
	LBRACE: REDUCE feature = VAR ID.i nativeortype.nt SEMI
	VAR: REDUCE feature = VAR ID.i nativeortype.nt SEMI
	DEF: REDUCE feature = VAR ID.i nativeortype.nt SEMI
	OVERRIDE: REDUCE feature = VAR ID.i nativeortype.nt SEMI
149:	NATIVE: SHIFT; goto 150
150:	SEMI: REDUCE nativeortype = ASSIGN NATIVE
151:	TYPE: SHIFT; goto 152
152:	ASSIGN: SHIFT; goto 153
153:	MINUS: SHIFT; goto 74
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 154
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
154:	SEMI: REDUCE nativeortype = COLON TYPE.t ASSIGN expr.e
155:	MINUS: SHIFT; goto 74
	RBRACE: REDUCE empty = 
	LBRACE: SHIFT; goto 101
	ID: SHIFT; goto 24
	LPAREN: SHIFT; goto 113
	NULL: SHIFT; goto 117
	SUPER: SHIFT; goto 92
	NEW: SHIFT; goto 98
	NOT: SHIFT; goto 72
	INTEGER: SHIFT; goto 118
	STRING: SHIFT; goto 119
	BOOLEAN: SHIFT; goto 120
	THIS: SHIFT; goto 121
	IF: SHIFT; goto 28
	WHILE: SHIFT; goto 35
	VAR: SHIFT; goto 104
	notneg: SHIFT; goto 112
	dotcall: SHIFT; goto 76
	primary: SHIFT; goto 91
	timesdiv: SHIFT; goto 111
	plusminus: SHIFT; goto 86
	equals: SHIFT; goto 85
	expr: SHIFT; goto 51
	match: SHIFT; goto 40
	comparison: SHIFT; goto 63
	ifwhile: SHIFT; goto 27
	empty: SHIFT; goto 50
	block: SHIFT; goto 156
	blockdecl: SHIFT; goto 53
156:	RBRACE: SHIFT; goto 157
157:	SEMI: SHIFT; goto 158
158:	RBRACE: REDUCE feature = LBRACE block.bl RBRACE SEMI
	LBRACE: REDUCE feature = LBRACE block.bl RBRACE SEMI
	VAR: REDUCE feature = LBRACE block.bl RBRACE SEMI
	DEF: REDUCE feature = LBRACE block.bl RBRACE SEMI
	OVERRIDE: REDUCE feature = LBRACE block.bl RBRACE SEMI
159:	DEF: REDUCE optoverride = OVERRIDE.o
160:	DEF: REDUCE optoverride = empty
161:	EOF: REDUCE classbody = LBRACE RBRACE
	CLASS: REDUCE classbody = LBRACE RBRACE
162:	RBRACE: REDUCE featuredecl = feature.f
	LBRACE: REDUCE featuredecl = feature.f
	VAR: REDUCE featuredecl = feature.f
	DEF: REDUCE featuredecl = feature.f
	OVERRIDE: REDUCE featuredecl = feature.f
163:	TYPE: SHIFT; goto 165
	NATIVE: SHIFT; goto 167
	extension: SHIFT; goto 164
164:	LBRACE: REDUCE classdeclopts = EXTENDS extension.ext
165:	LPAREN: SHIFT; goto 80
	actuals: SHIFT; goto 166
166:	LBRACE: REDUCE extension = TYPE.t actuals.a
167:	LBRACE: REDUCE extension = NATIVE
168:	LBRACE: REDUCE classdeclopts = empty
169:	RPAREN: SHIFT; goto 177
	VAR: SHIFT; goto 178
	varformalsdecl: SHIFT; goto 170
170:	RPAREN: SHIFT; goto 171
	COMMA: SHIFT; goto 172
171:	LBRACE: REDUCE varformals = LPAREN varformalsdecl.vf RPAREN
	EXTENDS: REDUCE varformals = LPAREN varformalsdecl.vf RPAREN
172:	VAR: SHIFT; goto 173
173:	ID: SHIFT; goto 174
174:	COLON: SHIFT; goto 175
175:	TYPE: SHIFT; goto 176
176:	RPAREN: REDUCE varformalsdecl = varformalsdecl.vf COMMA VAR ID.i COLON TYPE.t
	COMMA: REDUCE varformalsdecl = varformalsdecl.vf COMMA VAR ID.i COLON TYPE.t
177:	LBRACE: REDUCE varformals = LPAREN RPAREN
	EXTENDS: REDUCE varformals = LPAREN RPAREN
178:	ID: SHIFT; goto 179
179:	COLON: SHIFT; goto 180
180:	TYPE: SHIFT; goto 181
181:	RPAREN: REDUCE varformalsdecl = VAR ID.i COLON TYPE.t
	COMMA: REDUCE varformalsdecl = VAR ID.i COLON TYPE.t
182:	EOF: REDUCE program = classdecl.c
	CLASS: REDUCE program = classdecl.c
